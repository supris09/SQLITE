<body> <info>
                      <fileName>educational-video-material-1-beware-of-fraud-and-scam-modes_ID.mp4</fileName>
                      <link>https://www.mufg.co.id/files/download/educational-video-material-1-beware-of-fraud-and-scam-modes_ID.mp4</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>educational-video-material-2-the-importance-of-maintaining-security-codes_ID.mp4</fileName>
                      <link>https://www.mufg.co.id/files/download/educational-video-material-2-the-importance-of-maintaining-security-codes_ID.mp4</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>educational-video-material-3-the-importance-of-protecting-personal-data_ID.mp4</fileName>
                      <link>https://www.mufg.co.id/files/download/educational-video-material-3-the-importance-of-protecting-personal-data_ID.mp4</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>asd-032-debit-authorization-for-electricity-bills-payment_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/asd-032-debit-authorization-for-electricity-bills-payment_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>asd-033-debit-authorization-for-telephone-bill-payment_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/asd-033-debit-authorization-for-telephone-bill-payment_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>tax-payment-application_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/tax-payment-application_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>delivery-sheet-of-application_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/delivery-sheet-of-application_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>smartform-cheque-and-giro-deposit-slip-pmt023_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/smartform-cheque-and-giro-deposit-slip-pmt023_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>letter-of-indemnity-idr-incoming_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/letter-of-indemnity-idr-incoming_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>pmt020-application-for-standing-order_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/pmt020-application-for-standing-order_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>pmt021-application-for-alteration-or-termination-of-standing-order_ID.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/pmt021-application-for-alteration-or-termination-of-standing-order_ID.pdf</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>flexible-mapping-tool_5-3-03.exe</fileName>
                      <link>https://www.mufg.co.id/files/download/flexible-mapping-tool_5-3-03.exe</link>
                      <version>5.3.03</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>flexible-mapping-tool_5-2-04.exe</fileName>
                      <link>https://www.mufg.co.id/files/download/flexible-mapping-tool_5-2-04.exe</link>
                      <version>5.2.04</version>
                      <priority>Low</priority>
                    </info><info>
                      <fileName>fmt-template-enpays_5-3.exe</fileName>
                      <link>https://www.mufg.co.id/files/download/fmt-template-enpays_5-3.exe</link>
                      <version>5.3</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>net-framework-x86-x64-allos_4-8.exe</fileName>
                      <link>https://www.mufg.co.id/files/download/net-framework-x86-x64-allos_4-8.exe</link>
                      <version>4.8</version>
                      <priority>Low</priority>
                    </info><info>
                      <fileName>smart-form-applications-for-trade-facility-bilingual_gcms.xlsm</fileName>
                      <link>https://www.mufg.co.id/files/download/smart-form-applications-for-trade-facility-bilingual_gcms.xlsm</link>
                      <version>gcms</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>smart-form-applications-for-trade-facility-bilingual_counter.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/smart-form-applications-for-trade-facility-bilingual_counter.xlsx</link>
                      <version>counter</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>registration-of-information-for-trade-facility-customer-form_FORM.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/registration-of-information-for-trade-facility-customer-form_FORM.pdf</link>
                      <version>FORM</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>e-remittance-form_ERT.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/e-remittance-form_ERT.xlsx</link>
                      <version>ERT</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>e-bank-guarantee-amendment_BGA.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/e-bank-guarantee-amendment_BGA.xlsx</link>
                      <version>BGA</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>e-bank-guarantee-issuance-bgi_BGI.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/e-bank-guarantee-issuance-bgi_BGI.xlsx</link>
                      <version>BGI</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>invoice-financing-smartform_INV.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/invoice-financing-smartform_INV.pdf</link>
                      <version>INV</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>2_OTHER DOCUMENT-7z.7z</fileName>
                      <link>https://www.mufg.co.id/files/download/2_OTHER DOCUMENT-7z.7z</link>
                      <version>OTHER DOCUMENT.7z</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>1_ON BOARDING DOCUMENT AND APPLICATION FORM-zip.7z</fileName>
                      <link>https://www.mufg.co.id/files/download/1_ON BOARDING DOCUMENT AND APPLICATION FORM-zip.7z</link>
                      <version>ON BOARDING DOCUMENT AND APPLICATION FORM.zip</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>global-master-terms_GLOBAL MASTER TERMS.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/global-master-terms_GLOBAL MASTER TERMS.pdf</link>
                      <version>GLOBAL MASTER TERMS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>country-addendum_COUNTRY ADDENDUM.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/country-addendum_COUNTRY ADDENDUM.pdf</link>
                      <version>COUNTRY ADDENDUM</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>tax-instruction-generator-16-npwp_5-2-1.xlsm</fileName>
                      <link>https://www.mufg.co.id/files/download/tax-instruction-generator-16-npwp_5-2-1.xlsm</link>
                      <version>5.2.1</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>smart-form-application-bank-guarantee-counter-2025_counter.xlsm</fileName>
                      <link>https://www.mufg.co.id/files/download/smart-form-application-bank-guarantee-counter-2025_counter.xlsm</link>
                      <version>counter</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app101-application-for-contract-and-service-setup_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app101-application-for-contract-and-service-setup_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app201-application-for-comsuite-owner-information-maintenance_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app201-application-for-comsuite-owner-information-maintenance_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app202-application-for-user-maintenance_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app202-application-for-user-maintenance_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app203-application-for-account-and-service-maintenance_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app203-application-for-account-and-service-maintenance_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app299-application-for-change-and-maintenance_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app299-application-for-change-and-maintenance_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>app301-application-for-product-termination_CS.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/app301-application-for-product-termination_CS.xlsx</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>mobile-token-brief-info_CS.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/mobile-token-brief-info_CS.pdf</link>
                      <version>CS</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>application-for-contract-and-service-setup_1.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/application-for-contract-and-service-setup_1.xlsx</link>
                      <version>1</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>application-for-service-and-user-maintenance_2.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/application-for-service-and-user-maintenance_2.xlsx</link>
                      <version>2</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>application-for-service-termination_3.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/application-for-service-termination_3.xlsx</link>
                      <version>3</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>tc-for-mufg-one-portal_0.pdf</fileName>
                      <link>https://www.mufg.co.id/files/download/tc-for-mufg-one-portal_0.pdf</link>
                      <version>0</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>new-format-forex-statement-letter_ID.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/new-format-forex-statement-letter_ID.docx</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>form-registration-of-authorized-sender_ID.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/form-registration-of-authorized-sender_ID.docx</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>form-alteration-of-authorized-sender_ID.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/form-alteration-of-authorized-sender_ID.docx</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>authorization-to-enter-into-forex-and-derivative-transaction_IDN.doc</fileName>
                      <link>https://www.mufg.co.id/files/download/authorization-to-enter-into-forex-and-derivative-transaction_IDN.doc</link>
                      <version>IDN</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>applications-for-amendment_2.7z</fileName>
                      <link>https://www.mufg.co.id/files/download/applications-for-amendment_2.7z</link>
                      <version>2</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>applications-for-cancellation_2.7z</fileName>
                      <link>https://www.mufg.co.id/files/download/applications-for-cancellation_2.7z</link>
                      <version>2</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>application-for-additional-information-of-remittance_2.xlsm</fileName>
                      <link>https://www.mufg.co.id/files/download/application-for-additional-information-of-remittance_2.xlsm</link>
                      <version>2</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>doors-cash-withdrawal_DCW.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/doors-cash-withdrawal_DCW.xlsx</link>
                      <version>DCW</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>doors-cash-delivery_DCD.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/doors-cash-delivery_DCD.xlsx</link>
                      <version>DCD</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>doors-cash-delivery-so_DCO.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/doors-cash-delivery-so_DCO.xlsx</link>
                      <version>DCO</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>doors-cash-pickup_DCP.xlsx</fileName>
                      <link>https://www.mufg.co.id/files/download/doors-cash-pickup_DCP.xlsx</link>
                      <version>DCP</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>letter-of-undertaking-and-indemnity_2022.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/letter-of-undertaking-and-indemnity_2022.docx</link>
                      <version>2022</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>structured-investment-opening-form_1.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/structured-investment-opening-form_1.docx</link>
                      <version>1</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>roll-over-td-valas-dhe-sda-application_ID.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/roll-over-td-valas-dhe-sda-application_ID.docx</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>td-application-opening-and-withdrawal_ID.xlsm</fileName>
                      <link>https://www.mufg.co.id/files/download/td-application-opening-and-withdrawal_ID.xlsm</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info><info>
                      <fileName>td-valas-dhe-sda_ID.docx</fileName>
                      <link>https://www.mufg.co.id/files/download/td-valas-dhe-sda_ID.docx</link>
                      <version>ID</version>
                      <priority>High</priority>
                    </info> </body>